#pragma require "STVutil.asc"
#include "STVutil.asc"

// for intellisense
#include "../../scripts/STVutil.asc"

class CustomMenu
{
    Vector2@ position;
    Vector2@ size;

    bool enabled;

    bool fillScreen;
    Vector2@ fillScreenPadding;
    bool fillScreenFromCenter;

    string header, footer;

    CustomMenu(Vector2@ position = Vector2(0, 0), bool fillScreen = true, Vector2@ fillScreenPadding = Vector2(300, 200), bool fillScreenFromCenter = true, Vector2@ size = Vector2(0, 0))
    {
        @this.position = position;
        @this.size = size;
        this.fillScreen = fillScreen;
        @this.fillScreenPadding = fillScreenPadding;
        this.fillScreenFromCenter = true;
        this.enabled = false;
        this.header = "";
        this.footer = "";
    }

    void enable() {
        this.enabled = true;
    }

    void disable() {
        this.enabled = false;
    }

    void toggle() {
        this.enabled = !this.enabled;
    }

    void draw(jjCANVAS@ canvas)
    {
        if(this.enabled) {
            int BACKGROUND_COLOR = 255;

            if (jjColorDepth == 8)
            {
                BACKGROUND_COLOR = 15;
            }

            canvas.drawRectangle(this.position.x, this.position.y, this.size.x, this.size.y, BACKGROUND_COLOR, SPRITE::BLEND_NORMAL, 128);

            // cursor
            canvas.drawRectangle(jjMouseX - 10, jjMouseY - 10, 10, 10, 18, SPRITE::NORMAL, 0);

            // header && footer
            canvas.drawString(jjResolutionWidth / 2 - 300 + 10, jjResolutionHeight / 2 - 200 + 10, this.header, STRING::MEDIUM, STRING::NORMAL, 0);
            canvas.drawString(jjResolutionWidth / 2 - 300 + 10, jjResolutionHeight / 2 - 200 + 390, this.footer, STRING::SMALL, STRING::NORMAL, 0);
        }
    }

    void update()
    {
        if(this.fillScreen) {
            @this.position = Vector2(jjResolutionWidth / (this.fillScreenFromCenter ? 2 : 1) - fillScreenPadding.x, jjResolutionHeight / (this.fillScreenFromCenter ? 2 : 1) - fillScreenPadding.y);
            @this.size = Vector2(jjResolutionWidth - this.fillScreenPadding.x, jjResolutionHeight - this.fillScreenPadding.y);
        }

    }
};
