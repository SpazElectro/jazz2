// hooks that I would love to have integrated into plus

#pragma require "STVutil.asc"
#include "STVutil.asc"

funcdef void PlayerJoinCallback(jjPLAYER@);
funcdef void PlayerLeaveCallback(jjPLAYER@); // this happens AFTER the player leaves

array<PlayerJoinCallback@> playerJoinCallbacks;
array<PlayerLeaveCallback@> playerLeaveCallbacks;

array<uint> hooks_prevPlayers();

void updateHooks() {
    for(int i = 0; i < 32; i++) {
        jjPLAYER@ player = jjPlayers[i];
        
        if(player.isActive) {
            if(hooks_prevPlayers.find(i) < 0) {
                // this timer is for the player's properties to all load
                TimerV(10, function(args) {
                    jjPLAYER @player;
                    int i;
                    args.get("player", @player);
                    args.get("i", i);

                    for (int pji = 0; pji < playerJoinCallbacks.length(); pji++)
                    {
                        playerJoinCallbacks[pji](player);
                    }

                    hooks_prevPlayers.insertLast(i);
                }, {{"player", player}, {"i", i}});
            }
        } else {
            if(hooks_prevPlayers.find(i) >= 0) {
                for (int pli = 0; pli < playerLeaveCallbacks.length(); pli++)
                {
                    playerLeaveCallbacks[pli](player);
                }

                hooks_prevPlayers.removeAt(hooks_prevPlayers.find(i));
            }
        }
    }
}
