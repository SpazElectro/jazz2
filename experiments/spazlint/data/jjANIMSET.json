[{"name":"firstAnim","description":"Creates space for an animation set with the number of animations equal to length of frameCounts, each with a number of frames determined by the corresponding frameCounts array element.\n","full":"uint firstAnimuint firstAnim","type":"property","arguments":[]},{"name":"allocate","description":"By default, any new animations and animframes begin at the first unused entries in jjAnimations and jjAnimFrames respectively. By passing positive values to the firstAnimToOverwrite and/or firstFrameToOverwrite arguments, however, you may choose specific animations and/or animframes to overwrite instead.\n","full":"jjANIMSET@ allocate(const array<uint> &in frameCounts)","type":"function","arguments":[{"type":"array<uint>","name":"frameCounts","attributes":["const","&in"],"items":[]}]},{"name":"load","description":"\n\t\t\tvoid onLevelLoad() {\n\tjjAnimSets[ANIM::HELMUT].load(\n\t\tjjPIXELMAP(\"Margery.png\"),\n\t\tframeWidth: 24,\n\t\tframeHeight: 26,\n\t\tframeSpacingX: 2,\n\t\tframeSpacingY: 2,\n\t\tstartY: 26,\n\t\tfirstAnimToOverwrite: jjAnimSets[ANIM::HELMUT]\n\t);\n\tjjObjectPresets[OBJECT::HELMUT].determineCurFrame();\n}\nThe spriteSheet argument is self-explanatory, and is primarily intended for use in combination with the jjPIXELMAP constructor from filename, as above, so you can load an external PNG image and convert it to an animation set. The sprite sheet must take the form of a grid of equally-sized rectangles, where each row is a separate animation for this animation set and each cell is a separate frame for that animation. A completely blank/transparent cell indicates the end of the animation, so in the above example image, the first animation (standing) has only one frame but the second animation (walking) has six frames. The number of animations in the animation set is inferred from the height of the image in conjunction with the other arguments.\nframeWidth and frameHeight specify the rectangular areas used by every frame in every animation in the sprite sheet. The largest and smallest sprites in your sheet must each have the same area devoted to them. However, JJ2+ will trim the transparent pixels from around the edges of every frame: in the above example, none of the sprites extend all the way to the left and right sides of their rectangles, so none of the resulting jjANIMFRAME objects will be the full 24 pixels wide.\nThe hotSpotX/hotSpotY properties of each created jjANIMFRAME will be set to the exact center of its source rectangle, not necessarily the exact center of the opaque pixels inside that rectangle. For example, if frameWidth and frameHeight each equal 64, but only the top left 32ï¿½32 pixels in a rectangle are opaque, then the hot spot will be at that frame's bottom right corner.\nYou (or whoever compiled the sprite sheet) may find it easier to draw some border lines between rows and columns. This can be indicated using the optional frameSpacingX and frameSpacingY arguments: in the above example, all the border lines are 2 pixels thick, so both arguments are 2. JJ2+ skips over these lines and does not draw them in the frames, even if they are opaque. Including the border lines on the far right and bottom of the image is optional.\nThe optional startX and startY arguments let you specify where in the image the actual sprite sheet content begins, in case there is any header information on the top or far left. In the above example, the first twenty-six pixel rows are dedicated to crediting the sprite artist, so startY is 26, but the sprite sheet starts on the far left of the image, so startX can remain at its default 0.\njjANIMFRAME::coldSpotY is only relevant to certain objects affected by gravity, which use it to determine how far off the ground their sprites should be. For each animation loaded by this method, coldSpotY will be set to the bottom of the opaque pixels in the first cell of the row, and each subsequent sprite will have its coldSpotY at the same height in the rectangle (not necessarily the same height in the opaque pixels in the rectangle). If this automatic guess isn't quite right for your sprites, and you want to adjust these numbers so the sprites sink into the ground or float above it a little more, you can use the optional coldSpotYOffsets argument to provide an array of vertical offsets, one for each animation row. For example, adding coldSpotYOffsets: array={-10,-10} to the above example will cause the enemies to constantly hover 10 pixels above the floor.\nBy default, any new animations and animframes begin at the first unused entries in jjAnimations and jjAnimFrames respectively. By passing positive values to the firstAnimToOverwrite and/or firstFrameToOverwrite arguments, however, you may choose specific animations and/or animframes to overwrite instead.\nThis method always sets jjANIMFRAME::gunSpotX and jjANIMFRAME::coldSpotX to the same value as jjANIMFRAME::hotSpotX, jjANIMFRAME::gunSpotY to the same value as jjANIMFRAME::hotSpotY, jjANIMFRAME::transparent to false, and jjANIMATION::fps to 10. If your script has any more specialized use for those properties you will have to set them manually.\n","full":"jjANIMSET@ load(uint fileSetID = 2048, const string &in filename = \"\", int firstAnimToOverwrite = -1, int firstFrameToOverwrite = -1)","type":"function","arguments":[{"type":"uint","name":"fileSetID","defaultValue":"2048","attributes":[],"items":[]},{"type":"string","name":"filename","attributes":["const","&in"],"items":[]},{"type":"int","name":"firstAnimToOverwrite","defaultValue":"-1","attributes":[],"items":[]},{"type":"int","name":"firstFrameToOverwrite","defaultValue":"-1","attributes":[],"items":[]}]},{"name":"load","description":"jjANIMFRAME::coldSpotY is only relevant to certain objects affected by gravity, which use it to determine how far off the ground their sprites should be. For each animation loaded by this method, coldSpotY will be set to the bottom of the opaque pixels in the first cell of the row, and each subsequent sprite will have its coldSpotY at the same height in the rectangle (not necessarily the same height in the opaque pixels in the rectangle). If this automatic guess isn't quite right for your sprites, and you want to adjust these numbers so the sprites sink into the ground or float above it a little more, you can use the optional coldSpotYOffsets argument to provide an array of vertical offsets, one for each animation row. For example, adding coldSpotYOffsets: array={-10,-10} to the above example will cause the enemies to constantly hover 10 pixels above the floor.\nBy default, any new animations and animframes begin at the first unused entries in jjAnimations and jjAnimFrames respectively. By passing positive values to the firstAnimToOverwrite and/or firstFrameToOverwrite arguments, however, you may choose specific animations and/or animframes to overwrite instead.\nThis method always sets jjANIMFRAME::gunSpotX and jjANIMFRAME::coldSpotX to the same value as jjANIMFRAME::hotSpotX, jjANIMFRAME::gunSpotY to the same value as jjANIMFRAME::hotSpotY, jjANIMFRAME::transparent to false, and jjANIMATION::fps to 10. If your script has any more specialized use for those properties you will have to set them manually.\n","full":"jjANIMSET@ load(const jjPIXELMAP &in spriteSheet, uint frameWidth, uint frameHeight, uint frameSpacingX = 0, uint frameSpacingY = 0, uint startX = 0, uint startY = 0, const array<int> &in coldSpotYOffsets = array<int>(), int firstAnimToOverwrite = -1, int firstFrameToOverwrite = -1)","type":"function","arguments":[{"type":"jjPIXELMAP","name":"spriteSheet","attributes":["const","&in"],"items":[]},{"type":"uint","name":"frameWidth","attributes":[],"items":[]},{"type":"uint","name":"frameHeight","attributes":[],"items":[]},{"type":"uint","name":"frameSpacingX","defaultValue":"0","attributes":[],"items":[]},{"type":"uint","name":"frameSpacingY","defaultValue":"0","attributes":[],"items":[]},{"type":"uint","name":"startX","defaultValue":"0","attributes":[],"items":[]},{"type":"uint","name":"startY","defaultValue":"0","attributes":[],"items":[]},{"type":"array<int>","name":"coldSpotYOffsets","attributes":["const","&in"],"items":[]}]}]