[{"name":"airboardBouncingMotion","description":"When true, causes little brown explosions to appear behind the player at regular intervals. By default, only true for rabbits whose jjPLAYER::fly is FLIGHT::AIRBOARD.\n","full":"bool airboardBouncingMotionbool airboardBouncingMotion","type":"property","arguments":[]},{"name":"airboardPuff","description":"The current sprite number, as an index to jjAnimFrames, that should be drawn for this player. Changing this is a purely visual effect and does not affect sprite-based collision with pickups, enemies, and so on. By default, equals the same as jjPLAYER::curFrame.\n","full":"bool airboardPuffbool airboardPuff","type":"property","arguments":[]},{"name":"angle","description":"When true, a sprite of a small flash is drawn coming out of the player's gun. Has no effect when angle does not equal 0 or either xScale or yScale do not equal 1 or -1. By default, only true immediately after the player has fired.\n","full":"int angleint angle","type":"property","arguments":[]},{"name":"curFrame","description":"What layer to draw the player (and related elements) in front of. By default always 4.\n","full":"uint curFrameuint curFrame","type":"property","arguments":[]},{"name":"flag","description":"The type of light emitted by the player. Possible values are NONE, NORMAL, POINT, POINT2, FLICKER, BRIGHT, LASERBEAM, LASER, RING, RING2, and PLAYER. By default, equals the same as jjPLAYER::lightType.\n","full":"TEAM::COLOR flagTEAM::COLOR flag","type":"property","arguments":[]},{"name":"gunFlash","description":"The player being drawn. This is a read-only property, so you can modify properties of the player but you cannot change which jjPLAYER object the jjPLAYERDRAW object has a handle to.\n","full":"bool gunFlashbool gunFlash","type":"property","arguments":[]},{"name":"invincibility","description":"Determines whether the player sprite should be drawn at all. By default, usually true but sometimes false when the player is flashing from being hurt or from timing out in an online server.\n","full":"bool invincibilitybool invincibility","type":"property","arguments":[]},{"name":"layer","description":"A sprite mode parameter further specifying how the player should be drawn. By default, equals the same as jjPLAYER::spriteParam.\n","full":"int layerint layer","type":"property","arguments":[]},{"name":"light","description":"When true, a glowing white trail follows the player around. By default, true when the player is moving at a decent speed.\n","full":"int8 lightint8 light","type":"property","arguments":[]},{"name":"lightType","description":"Allows you to draw most elements of the player at some relative position offset from the player's actual position. This is more powerful and more customizable than airboardBouncingMotion, which in particular does not modify the position the player's name is drawn at. By default, both properties equal 0.\n","full":"LIGHT::Type lightTypeLIGHT::Type lightType","type":"property","arguments":[]},{"name":"name","description":"What scale to draw the player at, in the manner of the corresponding parameters of jjCANVAS::drawResizedSprite. By default, xScale will equal 1 or -1 depending on jjPLAYER::direction, and yScale will equal 1 if jjPLAYER::antiGrav is false or -1 if it is true.\n","full":"bool namebool name","type":"property","arguments":[]},{"name":"player","description":"","full":"jjPLAYER@ playerjjPLAYER@ player","type":"property","arguments":[]},{"name":"shield[SHIELD::Shield]","description":"","full":"bool shield[SHIELD::Shield]bool shield[SHIELD::Shield]","type":"property","arguments":[]},{"name":"sprite","description":"","full":"bool spritebool sprite","type":"property","arguments":[]},{"name":"spriteMode","description":"","full":"SPRITE::Mode spriteModeSPRITE::Mode spriteMode","type":"property","arguments":[]},{"name":"spriteParam","description":"","full":"uint8 spriteParamuint8 spriteParam","type":"property","arguments":[]},{"name":"sugarRush","description":"","full":"bool sugarRushbool sugarRush","type":"property","arguments":[]},{"name":"trail","description":"","full":"bool trailbool trail","type":"property","arguments":[]},{"name":"xOffset","description":"","full":"float xOffsetfloat xOffset","type":"property","arguments":[]},{"name":"yOffset","description":"","full":"float yOffsetfloat yOffset","type":"property","arguments":[]},{"name":"xScale","description":"","full":"float xScalefloat xScale","type":"property","arguments":[]},{"name":"yScale","description":"","full":"float yScalefloat yScale","type":"property","arguments":[]}]