[{"name":"allowed","description":"Whether the weapon and/or its powerup can be legally used in the level. This value is used by the server to detect attempts of cheating and kick offenders, and by all players to determine which weapons they get upon use of the /ready command.\nBetween onLevelLoad and onLevelBegin, JJ2+ runs a function to determine the values for these properties for each weapon. jjWeapons[WEAPON::BLASTER].allowed will always be set to true; for the rest, JJ2+ looks at the current contents of jjObjects and checks each active object's jjOBJ::eventID. Any +3 ammo pickup or +15 ammo crate will set allowed to true for that weapon, and any powerup will set both allowed and allowedPowerup to true. Additionally, OBJECT::GUNCRATE and OBJECT::GUNBARREL will both set jjWeapons[WEAPON::BOUNCER].allowed to true, and OBJECT::GENERATOR and object-spawning crates will behave as if they were the objects they will spawn, e.g. a generator that creates +3 Toaster pickups will set jjWeapons[WEAPON::TOASTER].allowed to true. (Anything not set to true will be set to false, so there is no point in editing these properties in onLevelLoad.)\nThis system covers most levels, but it is absolutely possible to set up your level to include ammo that JJ2+ was unable to guess based on a single loop through jjObjects, e.g. MCEs, or the \"Weapon\" parameter on +15 Bouncer crates, or any number of scripting changes. If you're at all unsure whether JJ2+ will make the right predictions for your particular level, there is zero harm in explicitly setting as many allowed and allowedPowerup values as you want, to true or to false, although make sure to set them in onLevelBegin at the earliest.\n","full":"bool allowedbool allowed","type":"property","arguments":[]},{"name":"allowedPowerup","description":"This system covers most levels, but it is absolutely possible to set up your level to include ammo that JJ2+ was unable to guess based on a single loop through jjObjects, e.g. MCEs, or the \"Weapon\" parameter on +15 Bouncer crates, or any number of scripting changes. If you're at all unsure whether JJ2+ will make the right predictions for your particular level, there is zero harm in explicitly setting as many allowed and allowedPowerup values as you want, to true or to false, although make sure to set them in onLevelBegin at the earliest.\n","full":"bool allowedPowerupbool allowedPowerup","type":"property","arguments":[]},{"name":"comesFromBirds","description":"When false, the default sample of the bullet will not be played.\n","full":"bool comesFromBirdsbool comesFromBirds","type":"property","arguments":[]},{"name":"comesFromBirdsPowerup","description":"How many gems a player shot by this weapon will lose in Treasure Hunt. (If the player has fewer gems than the weapon should cause them to lose, they will lose all their gems.) Defaults to 10 for WEAPON::SEEKER, WEAPON::RF, WEAPON::TNT, WEAPON::GUN8, and WEAPON::GUN9, and 3 for the others, with powerup status making no difference by default. Doesn't have any effect when changed by clients, only by the server (or in local games).\n","full":"bool comesFromBirdsPowerupbool comesFromBirdsPowerup","type":"property","arguments":[]},{"name":"comesFromGunCrates","description":"When true, ammo displays an infinity symbol for its quantity and can never be deplenished. Defaults to true for WEAPON::BLASTER. When spectating another player, the ammo count will appear according to your infinite setting for their currently chosen weapon, not their own.\n","full":"bool comesFromGunCratesbool comesFromGunCrates","type":"property","arguments":[]},{"name":"defaultSample","description":"The factor by which ammo pickups/powerups increase a weapon's ammo count, and by which that count is divided to be displayed onscreen. Defaults to 32 for WEAPON::TOASTER and 1 for everything else. When spectating another player, the ammo count will appear according to your multiplier setting for their currently chosen weapon, not their own.\n","full":"bool defaultSamplebool defaultSample","type":"property","arguments":[]},{"name":"gemsLost","description":"When true and a shield is active, shield ammo will replace default weapon ammo. Defaults to true for WEAPON::BLASTER.\nUnder certain circumstances this setting is used to determine validity of network packets, so keep in mind that if its value is not the same for the host as it is for clients, they may be kicked for cheating.\n","full":"int gemsLostint gemsLost","type":"property","arguments":[]},{"name":"gemsLostPowerup","description":"When true, ammo jumps back up to 50 or 99 on level (re)load. Should be set in onLevelLoad, rather than onLevelBegin, since it actually takes effect between the two. Defaults to true for WEAPON::BLASTER.\n","full":"int gemsLostPowerupint gemsLostPowerup","type":"property","arguments":[]},{"name":"gradualAim","description":"Any assignments of GUN8 or PEPPERSPRAY should be shared between clients and server to prevent kicking for invalid gun use.\n","full":"bool gradualAimbool gradualAim","type":"property","arguments":[]},{"name":"infinite","description":"","full":"bool infinitebool infinite","type":"property","arguments":[]},{"name":"maximum","description":"","full":"int maximumint maximum","type":"property","arguments":[]},{"name":"multiplier","description":"","full":"int multiplierint multiplier","type":"property","arguments":[]},{"name":"replacedByBubbles","description":"","full":"bool replacedByBubblesbool replacedByBubbles","type":"property","arguments":[]},{"name":"replacedByShield","description":"","full":"bool replacedByShieldbool replacedByShield","type":"property","arguments":[]},{"name":"replenishes","description":"","full":"bool replenishesbool replenishes","type":"property","arguments":[]},{"name":"spread","description":"","full":"SPREAD::Spread spreadSPREAD::Spread spread","type":"property","arguments":[]},{"name":"style","description":"","full":"WEAPON::Style styleWEAPON::Style style","type":"property","arguments":[]}]