[{"name":"align","description":"Whereas LEFT, CENTER and RIGHT should be self-explanatory, DEFAULT is the value JJ2 used for all strings originally, defined as follows: if xPixel is less than 0x4000, the string will have its left side aligned to the left side of the screen or layer. If in the range of 0x4000 to 0xFFFF, the string will be center-aligned relative to 0x8000, so for instance 0x8020 would align the center of the string to 0x20 pixels right of the center of the screen. Finally, if xPixel is greater than or equal to 0x10000, it will be drawn with its right side aligned to the right side of the screen instead, with higher values moving farther left. Note that these special cases currently apply only for drawing to the screen; the use of values of 0x4000 or higher for onDrawLayer# hooks is currently undefined.\n","full":"STRING::Alignment alignSTRING::Alignment align","type":"property","arguments":[]},{"name":"at","description":"Treatment of the hash ('#') character. If it's SPECIALSIGN, characters following hash will use a pattern of colors (or other parameters depending on sprite mode of the string).\n","full":"STRING::SignTreatment atSTRING::SignTreatment at","type":"property","arguments":[]},{"name":"caret","description":"Treatment of the line feed character (created by the escape sequence '\\n' in AngelScript). If it's either DISPLAYSIGN or SPECIALSIGN, line feed will begin a new line of text below the previous one, with vertical spacing varying depending on font size.\n","full":"STRING::SignTreatment caretSTRING::SignTreatment caret","type":"property","arguments":[]},{"name":"hash","description":"Treatment of the section sign ('ï¿½') character. If it's SPECIALSIGN, section sign will use ASCII code of the directly following character to determine spacing used for further text.\n","full":"STRING::SignTreatment hashSTRING::SignTreatment hash","type":"property","arguments":[]},{"name":"monospace","description":"Default spacing between characters, in pixels. If section is set to SPECIALSIGN, this value only applies until the first section sign character is found, as the effect of the section sign is absolute rather than relative to this property.\n","full":"bool monospacebool monospace","type":"property","arguments":[]},{"name":"newline","description":"Horizontal and vertical amplitudes of text movement.\n","full":"STRING::SignTreatment newlineSTRING::SignTreatment newline","type":"property","arguments":[]},{"name":"pipe","description":"","full":"STRING::SignTreatment pipeSTRING::SignTreatment pipe","type":"property","arguments":[]},{"name":"section","description":"","full":"STRING::SignTreatment sectionSTRING::SignTreatment section","type":"property","arguments":[]},{"name":"skipInitialHash","description":"","full":"bool skipInitialHashbool skipInitialHash","type":"property","arguments":[]},{"name":"spacing","description":"","full":"int spacingint spacing","type":"property","arguments":[]},{"name":"tilde","description":"","full":"STRING::SignTreatment tildeSTRING::SignTreatment tilde","type":"property","arguments":[]},{"name":"xAmp","description":"","full":"int xAmpint xAmp","type":"property","arguments":[]},{"name":"yAmp","description":"","full":"int yAmpint yAmp","type":"property","arguments":[]}]